import{i as l,H as i,t as o}from"./index-C58fmmaK.js";import{p as t,r as u}from"./permissionService-Ba0vYhuE.js";const g=l((a,n)=>({users:[],currentUser:null,userRolesPermissions:null,availableRoles:[],availablePermissions:[],pagination:null,isLoading:!1,error:null,fetchUsers:async(r=1)=>{a({isLoading:!0,error:null});try{const e=await i.getUsers(r);e.success?a({users:e.data,pagination:e.pagination,isLoading:!1}):(a({error:e.message,isLoading:!1}),o.error(e.message))}catch(e){const s=e.message||"Failed to fetch users";a({error:s,isLoading:!1}),o.error(s)}},fetchUser:async r=>{a({isLoading:!0,error:null});try{const e=await i.getUser(r);e.success?a({currentUser:e.data,isLoading:!1}):(a({error:e.message,isLoading:!1}),o.error(e.message))}catch(e){const s=e.message||"Failed to fetch user";a({error:s,isLoading:!1}),o.error(s)}},fetchUserRolesPermissions:async r=>{a({isLoading:!0,error:null});try{const e=await i.getUserRolesAndPermissions(r);e.success?a({userRolesPermissions:e.data,isLoading:!1}):(a({error:e.message,isLoading:!1}),o.error(e.message))}catch(e){const s=e.message||"Failed to fetch user roles and permissions";a({error:s,isLoading:!1}),o.error(s)}},fetchAvailableRoles:async()=>{try{const r=await u.getRoles(1,100);r.success&&a({availableRoles:r.data})}catch(r){console.error("Failed to fetch roles:",r)}},fetchAvailablePermissions:async()=>{try{const r=await t.getPermissions();r.success&&a({availablePermissions:r.data})}catch(r){console.error("Failed to fetch permissions:",r)}},createUser:async r=>{a({isLoading:!0,error:null});try{const e=await i.createUser(r);return e.success?(a({isLoading:!1}),o.success("User created successfully"),n().fetchUsers(),e.data):(a({error:e.message,isLoading:!1}),o.error(e.message),null)}catch(e){const s=e.message||"Failed to create user";return a({error:s,isLoading:!1}),o.error(s),null}},updateUser:async(r,e)=>{a({isLoading:!0,error:null});try{const s=await i.updateUser(r,e);return s.success?(a({currentUser:s.data,isLoading:!1}),o.success("User updated successfully"),n().fetchUsers(),s.data):(a({error:s.message,isLoading:!1}),o.error(s.message),null)}catch(s){const c=s.message||"Failed to update user";return a({error:c,isLoading:!1}),o.error(c),null}},deleteUser:async r=>{a({isLoading:!0,error:null});try{const e=await i.deleteUser(r);return e.success?(a({isLoading:!1}),o.success("User deleted successfully"),n().fetchUsers(),!0):(a({error:e.message,isLoading:!1}),o.error(e.message),!1)}catch(e){const s=e.message||"Failed to delete user";return a({error:s,isLoading:!1}),o.error(s),!1}},syncUserRoles:async(r,e)=>{try{const s=await i.syncUserRoles(r,{roles:e});return s.success?(o.success("User roles updated successfully"),n().fetchUser(r),n().fetchUserRolesPermissions(r),!0):(o.error(s.message),!1)}catch(s){return o.error(s.message||"Failed to update user roles"),!1}},syncUserPermissions:async(r,e)=>{try{const s=await i.syncUserPermissions(r,{permissions:e});return s.success?(o.success("User permissions updated successfully"),n().fetchUser(r),n().fetchUserRolesPermissions(r),!0):(o.error(s.message),!1)}catch(s){return o.error(s.message||"Failed to update user permissions"),!1}},clearCurrentUser:()=>a({currentUser:null,userRolesPermissions:null})}));export{g as u};
