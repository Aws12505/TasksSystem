import{av as S,D as y,h as r}from"./index-BTqHZwA1.js";const h=n=>{const{currentTask:s,currentTaskWithAssignments:t,availableUsers:u,isLoading:b,error:p,fetchTask:i,fetchTaskWithAssignments:c,fetchAvailableUsers:g,assignUsersToTask:T,addUserToTask:l,updateUserAssignment:d,removeUserFromTask:m,clearCurrentTask:o}=S(),e=typeof n=="string"?parseInt(n):n;return y.useEffect(()=>(e&&(i(e),c(e),g()),()=>{o()}),[e,i,c,g,o]),{task:s,taskWithAssignments:t,availableUsers:u,isLoading:b,error:p,assignUsers:a=>T(e,a),addUser:(a,k)=>l(e,a,k),updateAssignment:(a,k)=>d(e,a,k),removeUser:a=>m(e,a)}};class U{async getSubtasks(s=1,t=15){return r.getPaginated("/subtasks",{page:s,per_page:t})}async getSubtask(s){return r.get(`/subtasks/${s}`)}async createSubtask(s){return r.post("/subtasks",s)}async updateSubtask(s,t){return r.put(`/subtasks/${s}`,t)}async deleteSubtask(s){return r.delete(`/subtasks/${s}`)}async getSubtasksByTask(s,t=1,u=15){return r.getPaginated(`/tasks/${s}/subtasks`,{page:t,per_page:u})}async toggleSubtaskCompletion(s){return r.post(`/subtasks/${s}/toggle`)}}const v=new U;export{v as s,h as u};
