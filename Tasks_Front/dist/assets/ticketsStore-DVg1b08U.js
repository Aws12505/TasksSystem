import{J as c,k as u,t as i,H as g}from"./index-AhLzAXVj.js";class l{async getTickets(a=1,s=15){return c.getPaginated("/tickets",{page:a,per_page:s})}async getTicket(a){return c.get(`/tickets/${a}`)}async createTicket(a){return c.post("/tickets",a)}async updateTicket(a,s){return c.put(`/tickets/${a}`,s)}async deleteTicket(a){return c.delete(`/tickets/${a}`)}async getAvailableTickets(a=1,s=15){return c.getPaginated("/tickets/available",{page:a,per_page:s})}async getTicketsByRequester(a,s=1,e=15){return c.getPaginated(`/users/${a}/tickets/requested`,{page:s,per_page:e})}async getTicketsByAssignee(a,s=1,e=15){return c.getPaginated(`/users/${a}/tickets/assigned`,{page:s,per_page:e})}async getTicketsByStatus(a,s=1,e=15){return c.getPaginated(`/tickets/status/${a}`,{page:s,per_page:e})}async getTicketsByType(a,s=1,e=15){return c.getPaginated(`/tickets/type/${a}`,{page:s,per_page:e})}async claimTicket(a){return c.post(`/tickets/${a}/claim`,{})}async assignTicket(a,s){return c.post(`/tickets/${a}/assign/${s}`,{})}async completeTicket(a){return c.post(`/tickets/${a}/complete`,{})}async unassignTicket(a){return c.post(`/tickets/${a}/unassign`,{})}async updateTicketStatus(a,s){return c.post(`/tickets/${a}/status`,s)}static getTicketStatusOptions(){return[{value:"open",label:"Open",color:"red"},{value:"in_progress",label:"In Progress",color:"yellow"},{value:"resolved",label:"Resolved",color:"green"}]}static getTicketTypeOptions(){return[{value:"quick_fix",label:"Quick Fix",estimatedTime:"1-2 hours"},{value:"bug_investigation",label:"Bug Investigation",estimatedTime:"4-8 hours"},{value:"user_support",label:"User Support",estimatedTime:"30 minutes - 2 hours"}]}}const n=new l,k=u((r,a)=>({tickets:[],availableTickets:[],currentTicket:null,availableUsers:[],statusOptions:l.getTicketStatusOptions(),typeOptions:l.getTicketTypeOptions(),pagination:null,availablePagination:null,isLoading:!1,error:null,fetchTickets:async(s=1)=>{r({isLoading:!0,error:null});try{const e=await n.getTickets(s);e.success?r({tickets:e.data,pagination:e.pagination||{current_page:1,total:e.data.length,per_page:15,last_page:1,from:e.data.length>0?1:null,to:e.data.length},isLoading:!1}):(r({error:e.message,isLoading:!1}),i.error(e.message))}catch(e){const t=e.message||"Failed to fetch tickets";r({error:t,isLoading:!1}),i.error(t)}},fetchAvailableTickets:async(s=1)=>{r({isLoading:!0,error:null});try{const e=await n.getAvailableTickets(s);e.success?r({availableTickets:e.data,availablePagination:e.pagination||{current_page:1,total:e.data.length,per_page:15,last_page:1,from:e.data.length>0?1:null,to:e.data.length},isLoading:!1}):(r({error:e.message,isLoading:!1}),i.error(e.message))}catch(e){const t=e.message||"Failed to fetch available tickets";r({error:t,isLoading:!1}),i.error(t)}},fetchTicket:async s=>{r({isLoading:!0,error:null});try{const e=await n.getTicket(s);e.success?r({currentTicket:e.data,isLoading:!1}):(r({error:e.message,isLoading:!1}),i.error(e.message))}catch(e){const t=e.message||"Failed to fetch ticket";r({error:t,isLoading:!1}),i.error(t)}},fetchTicketsByRequester:async(s,e=1)=>{r({isLoading:!0,error:null});try{const t=await n.getTicketsByRequester(s,e);t.success?r({tickets:t.data,pagination:t.pagination||{current_page:1,total:t.data.length,per_page:15,last_page:1,from:t.data.length>0?1:null,to:t.data.length},isLoading:!1}):(r({error:t.message,isLoading:!1}),i.error(t.message))}catch(t){const o=t.message||"Failed to fetch tickets by requester";r({error:o,isLoading:!1}),i.error(o)}},fetchTicketsByAssignee:async(s,e=1)=>{r({isLoading:!0,error:null});try{const t=await n.getTicketsByAssignee(s,e);t.success?r({tickets:t.data,pagination:t.pagination||{current_page:1,total:t.data.length,per_page:15,last_page:1,from:t.data.length>0?1:null,to:t.data.length},isLoading:!1}):(r({error:t.message,isLoading:!1}),i.error(t.message))}catch(t){const o=t.message||"Failed to fetch tickets by assignee";r({error:o,isLoading:!1}),i.error(o)}},fetchTicketsByStatus:async(s,e=1)=>{r({isLoading:!0,error:null});try{const t=await n.getTicketsByStatus(s,e);t.success?r({tickets:t.data,pagination:t.pagination||{current_page:1,total:t.data.length,per_page:15,last_page:1,from:t.data.length>0?1:null,to:t.data.length},isLoading:!1}):(r({error:t.message,isLoading:!1}),i.error(t.message))}catch(t){const o=t.message||"Failed to fetch tickets by status";r({error:o,isLoading:!1}),i.error(o)}},fetchTicketsByType:async(s,e=1)=>{r({isLoading:!0,error:null});try{const t=await n.getTicketsByType(s,e);t.success?r({tickets:t.data,pagination:t.pagination||{current_page:1,total:t.data.length,per_page:15,last_page:1,from:t.data.length>0?1:null,to:t.data.length},isLoading:!1}):(r({error:t.message,isLoading:!1}),i.error(t.message))}catch(t){const o=t.message||"Failed to fetch tickets by type";r({error:o,isLoading:!1}),i.error(o)}},fetchAvailableUsers:async()=>{try{const s=await g.getUsers(1,100);s.success&&r({availableUsers:s.data})}catch(s){console.error("Failed to fetch users:",s)}},createTicket:async s=>{r({isLoading:!0,error:null});try{const e=await n.createTicket(s);return e.success?(r({isLoading:!1}),i.success("Ticket created successfully"),a().fetchTickets(),e.data):(r({error:e.message,isLoading:!1}),i.error(e.message),null)}catch(e){const t=e.message||"Failed to create ticket";return r({error:t,isLoading:!1}),i.error(t),null}},updateTicket:async(s,e)=>{r({isLoading:!0,error:null});try{const t=await n.updateTicket(s,e);return t.success?(r({currentTicket:t.data,isLoading:!1}),i.success("Ticket updated successfully"),a().fetchTickets(),t.data):(r({error:t.message,isLoading:!1}),i.error(t.message),null)}catch(t){const o=t.message||"Failed to update ticket";return r({error:o,isLoading:!1}),i.error(o),null}},updateTicketStatus:async(s,e)=>{try{const t=await n.updateTicketStatus(s,e);return t.success?(i.success("Ticket status updated"),a().currentTicket?.id===s&&r({currentTicket:t.data}),a().fetchTickets(),t.data):(i.error(t.message),null)}catch(t){return i.error(t.message||"Failed to update ticket status"),null}},deleteTicket:async s=>{r({isLoading:!0,error:null});try{const e=await n.deleteTicket(s);return e.success?(r({isLoading:!1}),i.success("Ticket deleted successfully"),a().fetchTickets(),!0):(r({error:e.message,isLoading:!1}),i.error(e.message),!1)}catch(e){const t=e.message||"Failed to delete ticket";return r({error:t,isLoading:!1}),i.error(t),!1}},claimTicket:async s=>{try{const e=await n.claimTicket(s);return e.success?(i.success("Ticket claimed successfully"),a().currentTicket?.id===s&&r({currentTicket:e.data}),a().fetchTickets(),a().fetchAvailableTickets(),e.data):(i.error(e.message),null)}catch(e){return i.error(e.message||"Failed to claim ticket"),null}},assignTicket:async(s,e)=>{try{const t=await n.assignTicket(s,e);return t.success?(i.success("Ticket assigned successfully"),a().currentTicket?.id===s&&r({currentTicket:t.data}),a().fetchTickets(),a().fetchAvailableTickets(),t.data):(i.error(t.message),null)}catch(t){return i.error(t.message||"Failed to assign ticket"),null}},completeTicket:async s=>{try{const e=await n.completeTicket(s);return e.success?(i.success("Ticket completed successfully"),a().currentTicket?.id===s&&r({currentTicket:e.data}),a().fetchTickets(),e.data):(i.error(e.message),null)}catch(e){return i.error(e.message||"Failed to complete ticket"),null}},unassignTicket:async s=>{try{const e=await n.unassignTicket(s);return e.success?(i.success("Ticket unassigned successfully"),a().currentTicket?.id===s&&r({currentTicket:e.data}),a().fetchTickets(),a().fetchAvailableTickets(),e.data):(i.error(e.message),null)}catch(e){return i.error(e.message||"Failed to unassign ticket"),null}},getStatusOptions:()=>l.getTicketStatusOptions(),getTypeOptions:()=>l.getTicketTypeOptions(),clearCurrentTicket:()=>r({currentTicket:null,error:null})}));export{k as u};
