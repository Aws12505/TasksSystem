import{H as o,k as d,t as n,G as u,aX as f,ak as h}from"./index-DB2dH0Gn.js";import{r as g}from"./ratingConfigService-B3itJf9t.js";class k{async createTaskRating(t){return o.post("/task-ratings",t)}async updateTaskRating(t,a){return o.put(`/task-ratings/${t}`,a)}async getTaskRatingsByTask(t,a=1,r=15){return o.getPaginated(`/tasks/${t}/ratings`,{page:a,per_page:r})}async createStakeholderRating(t){return o.post("/stakeholder-ratings",t)}async updateStakeholderRating(t,a){return o.put(`/stakeholder-ratings/${t}`,a)}async getStakeholderRatingsByProject(t,a=1,r=15){return o.getPaginated(`/projects/${t}/stakeholder-ratings`,{page:a,per_page:r})}async getAllFinalRatings(t=1,a=15){return o.getPaginated("/final-ratings",{page:t,per_page:a})}async calculateFinalRating(t,a){return o.post(`/users/${t}/calculate-final-rating`,a)}async getUserFinalRating(t,a,r){return o.get(`/users/${t}/final-rating/${a}/${r}`)}}const l=new k,y=d((s,t)=>({taskRatings:[],stakeholderRatings:[],finalRatings:[],taskRatingConfigs:[],stakeholderRatingConfigs:[],finalRatingConfigs:[],availableTasks:[],availableProjects:[],availableUsers:[],taskRatingsPagination:null,stakeholderRatingsPagination:null,finalRatingsPagination:null,isLoading:!1,error:null,fetchTaskRatings:async(a,r=1)=>{s({isLoading:!0,error:null});try{const e=await l.getTaskRatingsByTask(a,r);e.success?s({taskRatings:e.data,taskRatingsPagination:e.pagination||{current_page:1,total:e.data.length,per_page:15,last_page:1,from:e.data.length>0?1:null,to:e.data.length},isLoading:!1}):(s({error:e.message,isLoading:!1}),n.error(e.message))}catch(e){const i=e.message||"Failed to fetch task ratings";s({error:i,isLoading:!1}),n.error(i)}},fetchStakeholderRatings:async(a,r=1)=>{s({isLoading:!0,error:null});try{const e=await l.getStakeholderRatingsByProject(a,r);e.success?s({stakeholderRatings:e.data,stakeholderRatingsPagination:e.pagination||{current_page:1,total:e.data.length,per_page:15,last_page:1,from:e.data.length>0?1:null,to:e.data.length},isLoading:!1}):(s({error:e.message,isLoading:!1}),n.error(e.message))}catch(e){const i=e.message||"Failed to fetch stakeholder ratings";s({error:i,isLoading:!1}),n.error(i)}},fetchFinalRatings:async(a=1)=>{s({isLoading:!0,error:null});try{const r=await l.getAllFinalRatings(a);r.success?s({finalRatings:r.data,finalRatingsPagination:r.pagination||{current_page:1,total:r.data.length,per_page:15,last_page:1,from:r.data.length>0?1:null,to:r.data.length},isLoading:!1}):(s({error:r.message,isLoading:!1}),n.error(r.message))}catch(r){const e=r.message||"Failed to fetch final ratings";s({error:e,isLoading:!1}),n.error(e)}},fetchUserFinalRating:async(a,r,e)=>{s({isLoading:!0,error:null});try{const i=await l.getUserFinalRating(a,r,e);return i.success?(s({isLoading:!1}),i.data):(s({error:i.message,isLoading:!1}),n.error(i.message),null)}catch(i){const c=i.message||"Failed to fetch user final rating";return s({error:c,isLoading:!1}),n.error(c),null}},fetchTaskRatingConfigs:async()=>{try{const a=await g.getRatingConfigsByType("task_rating");a.success&&s({taskRatingConfigs:a.data})}catch(a){console.error("Failed to fetch task rating configs:",a)}},fetchStakeholderRatingConfigs:async()=>{try{const a=await g.getRatingConfigsByType("stakeholder_rating");a.success&&s({stakeholderRatingConfigs:a.data})}catch(a){console.error("Failed to fetch stakeholder rating configs:",a)}},fetchFinalRatingConfigs:async()=>{try{const a=await g.getRatingConfigsByType("final_rating");a.success&&s({finalRatingConfigs:a.data})}catch(a){console.error("Failed to fetch final rating configs:",a)}},fetchAvailableTasks:async()=>{try{const a=await h.getTasks(1);a.success&&s({availableTasks:a.data})}catch(a){console.error("Failed to fetch tasks:",a)}},fetchAvailableProjects:async()=>{try{const a=await f.getProjects(1,100);a.success&&s({availableProjects:a.data})}catch(a){console.error("Failed to fetch projects:",a)}},fetchAvailableUsers:async()=>{try{const a=await u.getUsers(1,100);a.success&&s({availableUsers:a.data})}catch(a){console.error("Failed to fetch users:",a)}},createTaskRating:async a=>{s({isLoading:!0,error:null});try{const r=await l.createTaskRating(a);if(r.success){s({isLoading:!1}),n.success("Task rating created successfully");const e=t().taskRatings;return e.length>0&&e[0].task_id===a.task_id&&t().fetchTaskRatings(a.task_id),r.data}else return s({error:r.message,isLoading:!1}),n.error(r.message),null}catch(r){const e=r.message||"Failed to create task rating";return s({error:e,isLoading:!1}),n.error(e),null}},updateTaskRating:async(a,r)=>{s({isLoading:!0,error:null});try{const e=await l.updateTaskRating(a,r);return e.success?(s({isLoading:!1}),n.success("Task rating updated successfully"),r.task_id&&t().fetchTaskRatings(r.task_id),e.data):(s({error:e.message,isLoading:!1}),n.error(e.message),null)}catch(e){const i=e.message||"Failed to update task rating";return s({error:i,isLoading:!1}),n.error(i),null}},createStakeholderRating:async a=>{s({isLoading:!0,error:null});try{const r=await l.createStakeholderRating(a);if(r.success){s({isLoading:!1}),n.success("Stakeholder rating created successfully");const e=t().stakeholderRatings;return e.length>0&&e[0].project_id===a.project_id&&t().fetchStakeholderRatings(a.project_id),r.data}else return s({error:r.message,isLoading:!1}),n.error(r.message),null}catch(r){const e=r.message||"Failed to create stakeholder rating";return s({error:e,isLoading:!1}),n.error(e),null}},updateStakeholderRating:async(a,r)=>{s({isLoading:!0,error:null});try{const e=await l.updateStakeholderRating(a,r);return e.success?(s({isLoading:!1}),n.success("Stakeholder rating updated successfully"),r.project_id&&t().fetchStakeholderRatings(r.project_id),e.data):(s({error:e.message,isLoading:!1}),n.error(e.message),null)}catch(e){const i=e.message||"Failed to update stakeholder rating";return s({error:i,isLoading:!1}),n.error(i),null}},calculateFinalRating:async(a,r)=>{s({isLoading:!0,error:null});try{const e=await l.calculateFinalRating(a,r);return e.success?(s({isLoading:!1}),n.success("Final rating calculated successfully"),t().fetchFinalRatings(),e.data):(s({error:e.message,isLoading:!1}),n.error(e.message),null)}catch(e){const i=e.message||"Failed to calculate final rating";return s({error:i,isLoading:!1}),n.error(i),null}},clearAllRatings:()=>{s({taskRatings:[],stakeholderRatings:[],finalRatings:[],taskRatingsPagination:null,stakeholderRatingsPagination:null,finalRatingsPagination:null,error:null})}}));export{y as u};
