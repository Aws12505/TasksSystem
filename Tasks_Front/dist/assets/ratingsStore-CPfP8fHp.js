import{h as o,i as c,t as n,b2 as d,ao as u}from"./index-D4Jhfeeq.js";import{r as l}from"./ratingConfigService-BqyzXYFy.js";class k{async createTaskRating(t){return o.post("/task-ratings",t)}async updateTaskRating(t,e){return o.put(`/task-ratings/${t}`,e)}async getTaskRatingsByTask(t,e=1,s=15){return o.getPaginated(`/tasks/${t}/ratings`,{page:e,per_page:s})}async createStakeholderRating(t){return o.post("/stakeholder-ratings",t)}async updateStakeholderRating(t,e){return o.put(`/stakeholder-ratings/${t}`,e)}async getStakeholderRatingsByProject(t,e=1,s=15){return o.getPaginated(`/projects/${t}/stakeholder-ratings`,{page:e,per_page:s})}}const g=new k,p=c((r,t)=>({taskRatings:[],stakeholderRatings:[],taskRatingConfigs:[],stakeholderRatingConfigs:[],availableTasks:[],availableProjects:[],taskRatingsPagination:null,stakeholderRatingsPagination:null,isLoading:!1,error:null,fetchTaskRatings:async(e,s=1)=>{r({isLoading:!0,error:null});try{const a=await g.getTaskRatingsByTask(e,s);a.success?r({taskRatings:a.data,taskRatingsPagination:a.pagination||{current_page:1,total:a.data.length,per_page:15,last_page:1,from:a.data.length>0?1:null,to:a.data.length},isLoading:!1}):(r({error:a.message,isLoading:!1}),n.error(a.message))}catch(a){const i=a.message||"Failed to fetch task ratings";r({error:i,isLoading:!1}),n.error(i)}},fetchStakeholderRatings:async(e,s=1)=>{r({isLoading:!0,error:null});try{const a=await g.getStakeholderRatingsByProject(e,s);a.success?r({stakeholderRatings:a.data,stakeholderRatingsPagination:a.pagination||{current_page:1,total:a.data.length,per_page:15,last_page:1,from:a.data.length>0?1:null,to:a.data.length},isLoading:!1}):(r({error:a.message,isLoading:!1}),n.error(a.message))}catch(a){const i=a.message||"Failed to fetch stakeholder ratings";r({error:i,isLoading:!1}),n.error(i)}},fetchTaskRatingConfigs:async()=>{try{const e=await l.getRatingConfigsByType("task_rating");e.success&&r({taskRatingConfigs:e.data})}catch(e){console.error("Failed to fetch task rating configs:",e)}},fetchStakeholderRatingConfigs:async()=>{try{const e=await l.getRatingConfigsByType("stakeholder_rating");e.success&&r({stakeholderRatingConfigs:e.data})}catch(e){console.error("Failed to fetch stakeholder rating configs:",e)}},fetchAvailableTasks:async()=>{try{const e=await u.getTasks(1);e.success&&r({availableTasks:e.data})}catch(e){console.error("Failed to fetch tasks:",e)}},fetchAvailableProjects:async()=>{try{const e=await d.getProjects(1,100);e.success&&r({availableProjects:e.data})}catch(e){console.error("Failed to fetch projects:",e)}},createTaskRating:async e=>{r({isLoading:!0,error:null});try{const s=await g.createTaskRating(e);if(s.success){r({isLoading:!1}),n.success("Task rating created successfully");const a=t().taskRatings;return a.length>0&&a[0].task_id===e.task_id&&t().fetchTaskRatings(e.task_id),s.data}else return r({error:s.message,isLoading:!1}),n.error(s.message),null}catch(s){const a=s.message||"Failed to create task rating";return r({error:a,isLoading:!1}),n.error(a),null}},updateTaskRating:async(e,s)=>{r({isLoading:!0,error:null});try{const a=await g.updateTaskRating(e,s);return a.success?(r({isLoading:!1}),n.success("Task rating updated successfully"),s.task_id&&t().fetchTaskRatings(s.task_id),a.data):(r({error:a.message,isLoading:!1}),n.error(a.message),null)}catch(a){const i=a.message||"Failed to update task rating";return r({error:i,isLoading:!1}),n.error(i),null}},createStakeholderRating:async e=>{r({isLoading:!0,error:null});try{const s=await g.createStakeholderRating(e);if(s.success){r({isLoading:!1}),n.success("Stakeholder rating created successfully");const a=t().stakeholderRatings;return a.length>0&&a[0].project_id===e.project_id&&t().fetchStakeholderRatings(e.project_id),s.data}else return r({error:s.message,isLoading:!1}),n.error(s.message),null}catch(s){const a=s.message||"Failed to create stakeholder rating";return r({error:a,isLoading:!1}),n.error(a),null}},updateStakeholderRating:async(e,s)=>{r({isLoading:!0,error:null});try{const a=await g.updateStakeholderRating(e,s);return a.success?(r({isLoading:!1}),n.success("Stakeholder rating updated successfully"),s.project_id&&t().fetchStakeholderRatings(s.project_id),a.data):(r({error:a.message,isLoading:!1}),n.error(a.message),null)}catch(a){const i=a.message||"Failed to update stakeholder rating";return r({error:i,isLoading:!1}),n.error(i),null}},clearAllRatings:()=>{r({taskRatings:[],stakeholderRatings:[],taskRatingsPagination:null,stakeholderRatingsPagination:null,error:null})}}));export{p as u};
